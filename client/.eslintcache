[{"A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\index.js":"1","A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\app.js":"2","A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\pages\\Home.js":"3","A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\utils\\queries.js":"4","A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\components\\ThoughtList\\index.js":"5","A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\components\\ThoughtForm\\index.js":"6","A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\utils\\mutations.js":"7","A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\pages\\Login.js":"8","A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\pages\\signup.js":"9","A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\utils\\Auth.js":"10"},{"size":197,"mtime":1655057043386,"results":"11","hashOfConfig":"12"},{"size":1505,"mtime":1655059336984,"results":"13","hashOfConfig":"12"},{"size":1051,"mtime":1655059437921,"results":"14","hashOfConfig":"12"},{"size":278,"mtime":1654794428611,"results":"15","hashOfConfig":"12"},{"size":1570,"mtime":1655059429526,"results":"16","hashOfConfig":"12"},{"size":3164,"mtime":1655058967279,"results":"17","hashOfConfig":"12"},{"size":1255,"mtime":1654880416354,"results":"18","hashOfConfig":"12"},{"size":1919,"mtime":1654885683864,"results":"19","hashOfConfig":"12"},{"size":4630,"mtime":1655059767230,"results":"20","hashOfConfig":"12"},{"size":1043,"mtime":1654880416353,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k6a6qg",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\index.js",[],"A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\app.js",[],"A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\pages\\Home.js",[],"A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\utils\\queries.js",[],"A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\components\\ThoughtList\\index.js",[],"A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\components\\ThoughtForm\\index.js",["45"],"// ***!!!Structure\n// NEEDS TO BE MEME NOT THOUGHT\n// ***!! *\n\n\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_MEME } from '../../utils/mutations';\nimport { QUERY_MEME } from '../../utils/queries';\n\nimport Auth from '../../utils/Auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_MEME, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_MEME });\n\n        cache.writeQuery({\n          query: QUERY_MEME,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n    //   const { me } = cache.readQuery({ query: QUERY_ME });\n    //   cache.writeQuery({\n    //     query: QUERY_ME,\n    //     data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n    //   });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // try {\n    //   const { data } = await addThought({\n    //     variables: {\n    //       thoughtText,\n    //       thoughtAuthor: Auth.getProfile().data.username,\n    //     },\n    //   });\n\n    //   setThoughtText('');\n    // } catch (err) {\n    //   console.error(err);\n    // }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;","A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\utils\\mutations.js",[],"A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\pages\\Login.js",["46"],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [formState, setFormState] = useState({\n    login: true,\n    email: '',\n    password: '',\n    name: ''\n  });\n\n  return (\n    <div>\n      <h4 className=\"mv3\">\n        {formState.login ? 'Login' : 'Sign Up'}\n      </h4>\n      <div className=\"flex flex-column\">\n        {!formState.login && (\n          <input\n            value={formState.name}\n            onChange={(e) =>\n              setFormState({\n                ...formState,\n                name: e.target.value\n              })\n            }\n            type=\"text\"\n            placeholder=\"Your name\"\n          />\n        )}\n        <input\n          value={formState.email}\n          onChange={(e) =>\n            setFormState({\n              ...formState,\n              email: e.target.value\n            })\n          }\n          type=\"text\"\n          placeholder=\"Your email address\"\n        />\n        <input\n          value={formState.password}\n          onChange={(e) =>\n            setFormState({\n              ...formState,\n              password: e.target.value\n            })\n          }\n          type=\"password\"\n          placeholder=\"Choose a safe password\"\n        />\n      </div>\n      <div className=\"flex mt3\">\n        <button\n          className=\"pointer mr2 button\"\n          onClick={() => console.log('onClick')}\n        >\n          {formState.login ? 'login' : 'create account'}\n        </button>\n        <button\n          className=\"pointer button\"\n          onClick={(e) =>\n            setFormState({\n              ...formState,\n              login: !formState.login\n            })\n          }\n        >\n          {formState.login\n            ? 'need to create an account?'\n            : 'already have an account?'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\pages\\signup.js",["47"],"import React, {useState} from 'react';\n// import './style.css'\n\nfunction CreateUser() {\n    return(\n      <div className=\"form\">\n          <div className=\"form-body\">\n              <div className=\"username\">\n                  <label className=\"form__label\" htmlFor=\"firstName\">First Name </label>\n                  <input className=\"form__input\" type=\"text\" id=\"firstName\" placeholder=\"First Name\"/>\n              </div>\n              <div className=\"lastname\">\n                  <label className=\"form__label\" htmlFor=\"lastName\">Last Name </label>\n                  <input  type=\"text\" name=\"\" id=\"lastName\"  className=\"form__input\"placeholder=\"LastName\"/>\n              </div>\n              <div className=\"email\">\n                  <label className=\"form__label\" htmlFor=\"email\">Email </label>\n                  <input  type=\"email\" id=\"email\" className=\"form__input\" placeholder=\"Email\"/>\n              </div>\n              <div className=\"password\">\n                  <label className=\"form__label\" htmlFor=\"password\">Password </label>\n                  <input className=\"form__input\" type=\"password\"  id=\"password\" placeholder=\"Password\"/>\n              </div>\n              <div className=\"confirm-password\">\n                  <label className=\"form__label\" htmlFor=\"confirmPassword\">Confirm Password </label>\n                  <input className=\"form__input\" type=\"password\" id=\"confirmPassword\" placeholder=\"Confirm Password\"/>\n              </div>\n          </div>\n          <div className=\"footer\">\n              <button type=\"submit\" className=\"btn\">Register</button>\n          </div>\n      </div>      \n    )       \n}\nexport default CreateUser;\n\n\n// ***!!!Structure pulled from 22-18****!!!!\n\n// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n\n// import { useMutation } from '@apollo/client';\n// import { ADD_USER } from '../utils/mutations';\n\n// import Auth from '../utils/auth';\n\n// const Signup = () => {\n//   const [formState, setFormState] = useState({\n//     username: '',\n//     email: '',\n//     password: '',\n//   });\n//   const [addUser, { error, data }] = useMutation(ADD_USER);\n\n//   const handleChange = (event) => {\n//     const { name, value } = event.target;\n\n//     setFormState({\n//       ...formState,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n//     console.log(formState);\n\n//     try {\n//       const { data } = await addUser({\n//         variables: { ...formState },\n//       });\n\n//       Auth.login(data.addUser.token);\n//     } catch (e) {\n//       console.error(e);\n//     }\n//   };\n\n//   return (\n//     <main className=\"flex-row justify-center mb-4\">\n//       <div className=\"col-12 col-lg-10\">\n//         <div className=\"card\">\n//           <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n//           <div className=\"card-body\">\n//             {data ? (\n//               <p>\n//                 Success! You may now head{' '}\n//                 <Link to=\"/\">back to the homepage.</Link>\n//               </p>\n//             ) : (\n//               <form onSubmit={handleFormSubmit}>\n//                 <input\n//                   className=\"form-input\"\n//                   placeholder=\"Your username\"\n//                   name=\"username\"\n//                   type=\"text\"\n//                   value={formState.name}\n//                   onChange={handleChange}\n//                 />\n//                 <input\n//                   className=\"form-input\"\n//                   placeholder=\"Your email\"\n//                   name=\"email\"\n//                   type=\"email\"\n//                   value={formState.email}\n//                   onChange={handleChange}\n//                 />\n//                 <input\n//                   className=\"form-input\"\n//                   placeholder=\"******\"\n//                   name=\"password\"\n//                   type=\"password\"\n//                   value={formState.password}\n//                   onChange={handleChange}\n//                 />\n//                 <button\n//                   className=\"btn btn-block btn-primary\"\n//                   style={{ cursor: 'pointer' }}\n//                   type=\"submit\"\n//                 >\n//                   Submit\n//                 </button>\n//               </form>\n//             )}\n\n//             {error && (\n//               <div className=\"my-3 p-3 bg-danger text-white\">\n//                 {error.message}\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </main>\n//   );\n// };\n\n// export default Signup;\n","A:\\CodingCoursework\\Project_BasedBook\\Based-Book\\client\\src\\utils\\Auth.js",[],{"ruleId":"48","severity":1,"message":"49","line":21,"column":10,"nodeType":"50","messageId":"51","endLine":21,"endColumn":20},{"ruleId":"48","severity":1,"message":"52","line":5,"column":9,"nodeType":"50","messageId":"51","endLine":5,"endColumn":17},{"ruleId":"48","severity":1,"message":"53","line":1,"column":16,"nodeType":"50","messageId":"51","endLine":1,"endColumn":24},"no-unused-vars","'addThought' is assigned a value but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","'useState' is defined but never used."]